#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TourManagement
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="tourmanagement")]
	public partial class TourManagementDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiPhi(ChiPhi instance);
    partial void UpdateChiPhi(ChiPhi instance);
    partial void DeleteChiPhi(ChiPhi instance);
    partial void InsertChiTietDoan(ChiTietDoan instance);
    partial void UpdateChiTietDoan(ChiTietDoan instance);
    partial void DeleteChiTietDoan(ChiTietDoan instance);
    partial void InsertDiaDiem(DiaDiem instance);
    partial void UpdateDiaDiem(DiaDiem instance);
    partial void DeleteDiaDiem(DiaDiem instance);
    partial void InsertDoanDuLich(DoanDuLich instance);
    partial void UpdateDoanDuLich(DoanDuLich instance);
    partial void DeleteDoanDuLich(DoanDuLich instance);
    partial void InsertGiaTour(GiaTour instance);
    partial void UpdateGiaTour(GiaTour instance);
    partial void DeleteGiaTour(GiaTour instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLoaiChiPhi(LoaiChiPhi instance);
    partial void UpdateLoaiChiPhi(LoaiChiPhi instance);
    partial void DeleteLoaiChiPhi(LoaiChiPhi instance);
    partial void InsertLoaiTour(LoaiTour instance);
    partial void UpdateLoaiTour(LoaiTour instance);
    partial void DeleteLoaiTour(LoaiTour instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertNoiDungTour(NoiDungTour instance);
    partial void UpdateNoiDungTour(NoiDungTour instance);
    partial void DeleteNoiDungTour(NoiDungTour instance);
    partial void InsertPhanCong(PhanCong instance);
    partial void UpdatePhanCong(PhanCong instance);
    partial void DeletePhanCong(PhanCong instance);
    partial void InsertThamQuan(ThamQuan instance);
    partial void UpdateThamQuan(ThamQuan instance);
    partial void DeleteThamQuan(ThamQuan instance);
    partial void InsertTour(Tour instance);
    partial void UpdateTour(Tour instance);
    partial void DeleteTour(Tour instance);
    #endregion
		
		public TourManagementDataContext() : 
				base(global::TourManagement.Properties.Settings.Default.tourmanagementConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public TourManagementDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TourManagementDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TourManagementDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TourManagementDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiPhi> ChiPhis
		{
			get
			{
				return this.GetTable<ChiPhi>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietDoan> ChiTietDoans
		{
			get
			{
				return this.GetTable<ChiTietDoan>();
			}
		}
		
		public System.Data.Linq.Table<DiaDiem> DiaDiems
		{
			get
			{
				return this.GetTable<DiaDiem>();
			}
		}
		
		public System.Data.Linq.Table<DoanDuLich> DoanDuLiches
		{
			get
			{
				return this.GetTable<DoanDuLich>();
			}
		}
		
		public System.Data.Linq.Table<GiaTour> GiaTours
		{
			get
			{
				return this.GetTable<GiaTour>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<LoaiChiPhi> LoaiChiPhis
		{
			get
			{
				return this.GetTable<LoaiChiPhi>();
			}
		}
		
		public System.Data.Linq.Table<LoaiTour> LoaiTours
		{
			get
			{
				return this.GetTable<LoaiTour>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<NoiDungTour> NoiDungTours
		{
			get
			{
				return this.GetTable<NoiDungTour>();
			}
		}
		
		public System.Data.Linq.Table<PhanCong> PhanCongs
		{
			get
			{
				return this.GetTable<PhanCong>();
			}
		}
		
		public System.Data.Linq.Table<ThamQuan> ThamQuans
		{
			get
			{
				return this.GetTable<ThamQuan>();
			}
		}
		
		public System.Data.Linq.Table<Tour> Tours
		{
			get
			{
				return this.GetTable<Tour>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiPhi")]
	public partial class ChiPhi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _DoanDuLich_Id;
		
		private decimal _SoTien;
		
		private int _LoaiChiPhi_Id;
		
		private EntityRef<DoanDuLich> _DoanDuLich;
		
		private EntityRef<LoaiChiPhi> _LoaiChiPhi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDoanDuLich_IdChanging(int value);
    partial void OnDoanDuLich_IdChanged();
    partial void OnSoTienChanging(decimal value);
    partial void OnSoTienChanged();
    partial void OnLoaiChiPhi_IdChanging(int value);
    partial void OnLoaiChiPhi_IdChanged();
    #endregion
		
		public ChiPhi()
		{
			this._DoanDuLich = default(EntityRef<DoanDuLich>);
			this._LoaiChiPhi = default(EntityRef<LoaiChiPhi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoanDuLich_Id", DbType="Int NOT NULL")]
		public int DoanDuLich_Id
		{
			get
			{
				return this._DoanDuLich_Id;
			}
			set
			{
				if ((this._DoanDuLich_Id != value))
				{
					if (this._DoanDuLich.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDoanDuLich_IdChanging(value);
					this.SendPropertyChanging();
					this._DoanDuLich_Id = value;
					this.SendPropertyChanged("DoanDuLich_Id");
					this.OnDoanDuLich_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTien", DbType="Decimal(18,0) NOT NULL")]
		public decimal SoTien
		{
			get
			{
				return this._SoTien;
			}
			set
			{
				if ((this._SoTien != value))
				{
					this.OnSoTienChanging(value);
					this.SendPropertyChanging();
					this._SoTien = value;
					this.SendPropertyChanged("SoTien");
					this.OnSoTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiChiPhi_Id", DbType="Int NOT NULL")]
		public int LoaiChiPhi_Id
		{
			get
			{
				return this._LoaiChiPhi_Id;
			}
			set
			{
				if ((this._LoaiChiPhi_Id != value))
				{
					if (this._LoaiChiPhi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiChiPhi_IdChanging(value);
					this.SendPropertyChanging();
					this._LoaiChiPhi_Id = value;
					this.SendPropertyChanged("LoaiChiPhi_Id");
					this.OnLoaiChiPhi_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoanDuLich_ChiPhi", Storage="_DoanDuLich", ThisKey="DoanDuLich_Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DoanDuLich DoanDuLich
		{
			get
			{
				return this._DoanDuLich.Entity;
			}
			set
			{
				DoanDuLich previousValue = this._DoanDuLich.Entity;
				if (((previousValue != value) 
							|| (this._DoanDuLich.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DoanDuLich.Entity = null;
						previousValue.ChiPhis.Remove(this);
					}
					this._DoanDuLich.Entity = value;
					if ((value != null))
					{
						value.ChiPhis.Add(this);
						this._DoanDuLich_Id = value.Id;
					}
					else
					{
						this._DoanDuLich_Id = default(int);
					}
					this.SendPropertyChanged("DoanDuLich");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiChiPhi_ChiPhi", Storage="_LoaiChiPhi", ThisKey="LoaiChiPhi_Id", OtherKey="Id", IsForeignKey=true)]
		public LoaiChiPhi LoaiChiPhi
		{
			get
			{
				return this._LoaiChiPhi.Entity;
			}
			set
			{
				LoaiChiPhi previousValue = this._LoaiChiPhi.Entity;
				if (((previousValue != value) 
							|| (this._LoaiChiPhi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiChiPhi.Entity = null;
						previousValue.ChiPhis.Remove(this);
					}
					this._LoaiChiPhi.Entity = value;
					if ((value != null))
					{
						value.ChiPhis.Add(this);
						this._LoaiChiPhi_Id = value.Id;
					}
					else
					{
						this._LoaiChiPhi_Id = default(int);
					}
					this.SendPropertyChanged("LoaiChiPhi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDoan")]
	public partial class ChiTietDoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KhachHang_Id;
		
		private int _DoanDuLich_Id;
		
		private System.DateTime _NgayThamGia;
		
		private EntityRef<DoanDuLich> _DoanDuLich;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKhachHang_IdChanging(int value);
    partial void OnKhachHang_IdChanged();
    partial void OnDoanDuLich_IdChanging(int value);
    partial void OnDoanDuLich_IdChanged();
    partial void OnNgayThamGiaChanging(System.DateTime value);
    partial void OnNgayThamGiaChanged();
    #endregion
		
		public ChiTietDoan()
		{
			this._DoanDuLich = default(EntityRef<DoanDuLich>);
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhachHang_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int KhachHang_Id
		{
			get
			{
				return this._KhachHang_Id;
			}
			set
			{
				if ((this._KhachHang_Id != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhachHang_IdChanging(value);
					this.SendPropertyChanging();
					this._KhachHang_Id = value;
					this.SendPropertyChanged("KhachHang_Id");
					this.OnKhachHang_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoanDuLich_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DoanDuLich_Id
		{
			get
			{
				return this._DoanDuLich_Id;
			}
			set
			{
				if ((this._DoanDuLich_Id != value))
				{
					if (this._DoanDuLich.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDoanDuLich_IdChanging(value);
					this.SendPropertyChanging();
					this._DoanDuLich_Id = value;
					this.SendPropertyChanged("DoanDuLich_Id");
					this.OnDoanDuLich_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThamGia", DbType="Date NOT NULL")]
		public System.DateTime NgayThamGia
		{
			get
			{
				return this._NgayThamGia;
			}
			set
			{
				if ((this._NgayThamGia != value))
				{
					this.OnNgayThamGiaChanging(value);
					this.SendPropertyChanging();
					this._NgayThamGia = value;
					this.SendPropertyChanged("NgayThamGia");
					this.OnNgayThamGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoanDuLich_ChiTietDoan", Storage="_DoanDuLich", ThisKey="DoanDuLich_Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DoanDuLich DoanDuLich
		{
			get
			{
				return this._DoanDuLich.Entity;
			}
			set
			{
				DoanDuLich previousValue = this._DoanDuLich.Entity;
				if (((previousValue != value) 
							|| (this._DoanDuLich.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DoanDuLich.Entity = null;
						previousValue.ChiTietDoans.Remove(this);
					}
					this._DoanDuLich.Entity = value;
					if ((value != null))
					{
						value.ChiTietDoans.Add(this);
						this._DoanDuLich_Id = value.Id;
					}
					else
					{
						this._DoanDuLich_Id = default(int);
					}
					this.SendPropertyChanged("DoanDuLich");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_ChiTietDoan", Storage="_KhachHang", ThisKey="KhachHang_Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.ChiTietDoans.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietDoans.Add(this);
						this._KhachHang_Id = value.Id;
					}
					else
					{
						this._KhachHang_Id = default(int);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiaDiem")]
	public partial class DiaDiem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TenDiaDiem;
		
		private EntitySet<ThamQuan> _ThamQuans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTenDiaDiemChanging(string value);
    partial void OnTenDiaDiemChanged();
    #endregion
		
		public DiaDiem()
		{
			this._ThamQuans = new EntitySet<ThamQuan>(new Action<ThamQuan>(this.attach_ThamQuans), new Action<ThamQuan>(this.detach_ThamQuans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDiaDiem", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenDiaDiem
		{
			get
			{
				return this._TenDiaDiem;
			}
			set
			{
				if ((this._TenDiaDiem != value))
				{
					this.OnTenDiaDiemChanging(value);
					this.SendPropertyChanging();
					this._TenDiaDiem = value;
					this.SendPropertyChanged("TenDiaDiem");
					this.OnTenDiaDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DiaDiem_ThamQuan", Storage="_ThamQuans", ThisKey="Id", OtherKey="DiaDiem_Id")]
		public EntitySet<ThamQuan> ThamQuans
		{
			get
			{
				return this._ThamQuans;
			}
			set
			{
				this._ThamQuans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThamQuans(ThamQuan entity)
		{
			this.SendPropertyChanging();
			entity.DiaDiem = this;
		}
		
		private void detach_ThamQuans(ThamQuan entity)
		{
			this.SendPropertyChanging();
			entity.DiaDiem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoanDuLich")]
	public partial class DoanDuLich : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TenDoanDuLich;
		
		private int _Tour_Id;
		
		private System.DateTime _NgayKhoiHanh;
		
		private System.DateTime _NgayKetThuc;
		
		private decimal _DoanhThu;
		
		private EntitySet<ChiPhi> _ChiPhis;
		
		private EntitySet<ChiTietDoan> _ChiTietDoans;
		
		private EntityRef<NoiDungTour> _NoiDungTour;
		
		private EntitySet<PhanCong> _PhanCongs;
		
		private EntityRef<Tour> _Tour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTenDoanDuLichChanging(string value);
    partial void OnTenDoanDuLichChanged();
    partial void OnTour_IdChanging(int value);
    partial void OnTour_IdChanged();
    partial void OnNgayKhoiHanhChanging(System.DateTime value);
    partial void OnNgayKhoiHanhChanged();
    partial void OnNgayKetThucChanging(System.DateTime value);
    partial void OnNgayKetThucChanged();
    partial void OnDoanhThuChanging(decimal value);
    partial void OnDoanhThuChanged();
    #endregion
		
		public DoanDuLich()
		{
			this._ChiPhis = new EntitySet<ChiPhi>(new Action<ChiPhi>(this.attach_ChiPhis), new Action<ChiPhi>(this.detach_ChiPhis));
			this._ChiTietDoans = new EntitySet<ChiTietDoan>(new Action<ChiTietDoan>(this.attach_ChiTietDoans), new Action<ChiTietDoan>(this.detach_ChiTietDoans));
			this._NoiDungTour = default(EntityRef<NoiDungTour>);
			this._PhanCongs = new EntitySet<PhanCong>(new Action<PhanCong>(this.attach_PhanCongs), new Action<PhanCong>(this.detach_PhanCongs));
			this._Tour = default(EntityRef<Tour>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDoanDuLich", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenDoanDuLich
		{
			get
			{
				return this._TenDoanDuLich;
			}
			set
			{
				if ((this._TenDoanDuLich != value))
				{
					this.OnTenDoanDuLichChanging(value);
					this.SendPropertyChanging();
					this._TenDoanDuLich = value;
					this.SendPropertyChanged("TenDoanDuLich");
					this.OnTenDoanDuLichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tour_Id", DbType="Int NOT NULL")]
		public int Tour_Id
		{
			get
			{
				return this._Tour_Id;
			}
			set
			{
				if ((this._Tour_Id != value))
				{
					if (this._Tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTour_IdChanging(value);
					this.SendPropertyChanging();
					this._Tour_Id = value;
					this.SendPropertyChanged("Tour_Id");
					this.OnTour_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKhoiHanh", DbType="Date NOT NULL")]
		public System.DateTime NgayKhoiHanh
		{
			get
			{
				return this._NgayKhoiHanh;
			}
			set
			{
				if ((this._NgayKhoiHanh != value))
				{
					this.OnNgayKhoiHanhChanging(value);
					this.SendPropertyChanging();
					this._NgayKhoiHanh = value;
					this.SendPropertyChanged("NgayKhoiHanh");
					this.OnNgayKhoiHanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="Date NOT NULL")]
		public System.DateTime NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoanhThu", DbType="Decimal(18,0) NOT NULL")]
		public decimal DoanhThu
		{
			get
			{
				return this._DoanhThu;
			}
			set
			{
				if ((this._DoanhThu != value))
				{
					this.OnDoanhThuChanging(value);
					this.SendPropertyChanging();
					this._DoanhThu = value;
					this.SendPropertyChanged("DoanhThu");
					this.OnDoanhThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoanDuLich_ChiPhi", Storage="_ChiPhis", ThisKey="Id", OtherKey="DoanDuLich_Id")]
		public EntitySet<ChiPhi> ChiPhis
		{
			get
			{
				return this._ChiPhis;
			}
			set
			{
				this._ChiPhis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoanDuLich_ChiTietDoan", Storage="_ChiTietDoans", ThisKey="Id", OtherKey="DoanDuLich_Id")]
		public EntitySet<ChiTietDoan> ChiTietDoans
		{
			get
			{
				return this._ChiTietDoans;
			}
			set
			{
				this._ChiTietDoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoanDuLich_NoiDungTour", Storage="_NoiDungTour", ThisKey="Id", OtherKey="DoanDuLich_Id", IsUnique=true, IsForeignKey=false)]
		public NoiDungTour NoiDungTour
		{
			get
			{
				return this._NoiDungTour.Entity;
			}
			set
			{
				NoiDungTour previousValue = this._NoiDungTour.Entity;
				if (((previousValue != value) 
							|| (this._NoiDungTour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NoiDungTour.Entity = null;
						previousValue.DoanDuLich = null;
					}
					this._NoiDungTour.Entity = value;
					if ((value != null))
					{
						value.DoanDuLich = this;
					}
					this.SendPropertyChanged("NoiDungTour");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoanDuLich_PhanCong", Storage="_PhanCongs", ThisKey="Id", OtherKey="DoanDuLich_Id")]
		public EntitySet<PhanCong> PhanCongs
		{
			get
			{
				return this._PhanCongs;
			}
			set
			{
				this._PhanCongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_DoanDuLich", Storage="_Tour", ThisKey="Tour_Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Tour Tour
		{
			get
			{
				return this._Tour.Entity;
			}
			set
			{
				Tour previousValue = this._Tour.Entity;
				if (((previousValue != value) 
							|| (this._Tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tour.Entity = null;
						previousValue.DoanDuLiches.Remove(this);
					}
					this._Tour.Entity = value;
					if ((value != null))
					{
						value.DoanDuLiches.Add(this);
						this._Tour_Id = value.Id;
					}
					else
					{
						this._Tour_Id = default(int);
					}
					this.SendPropertyChanged("Tour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiPhis(ChiPhi entity)
		{
			this.SendPropertyChanging();
			entity.DoanDuLich = this;
		}
		
		private void detach_ChiPhis(ChiPhi entity)
		{
			this.SendPropertyChanging();
			entity.DoanDuLich = null;
		}
		
		private void attach_ChiTietDoans(ChiTietDoan entity)
		{
			this.SendPropertyChanging();
			entity.DoanDuLich = this;
		}
		
		private void detach_ChiTietDoans(ChiTietDoan entity)
		{
			this.SendPropertyChanging();
			entity.DoanDuLich = null;
		}
		
		private void attach_PhanCongs(PhanCong entity)
		{
			this.SendPropertyChanging();
			entity.DoanDuLich = this;
		}
		
		private void detach_PhanCongs(PhanCong entity)
		{
			this.SendPropertyChanging();
			entity.DoanDuLich = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiaTour")]
	public partial class GiaTour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _NgayBatDau;
		
		private System.DateTime _NgayKetThuc;
		
		private decimal _Gia;
		
		private System.Nullable<int> _Tour_Id;
		
		private EntityRef<Tour> _Tour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNgayBatDauChanging(System.DateTime value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayKetThucChanging(System.DateTime value);
    partial void OnNgayKetThucChanged();
    partial void OnGiaChanging(decimal value);
    partial void OnGiaChanged();
    partial void OnTour_IdChanging(System.Nullable<int> value);
    partial void OnTour_IdChanged();
    #endregion
		
		public GiaTour()
		{
			this._Tour = default(EntityRef<Tour>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="Date NOT NULL")]
		public System.DateTime NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="Date NOT NULL")]
		public System.DateTime NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Decimal(18,0) NOT NULL")]
		public decimal Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tour_Id", DbType="Int")]
		public System.Nullable<int> Tour_Id
		{
			get
			{
				return this._Tour_Id;
			}
			set
			{
				if ((this._Tour_Id != value))
				{
					if (this._Tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTour_IdChanging(value);
					this.SendPropertyChanging();
					this._Tour_Id = value;
					this.SendPropertyChanged("Tour_Id");
					this.OnTour_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_GiaTour", Storage="_Tour", ThisKey="Tour_Id", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Tour Tour
		{
			get
			{
				return this._Tour.Entity;
			}
			set
			{
				Tour previousValue = this._Tour.Entity;
				if (((previousValue != value) 
							|| (this._Tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tour.Entity = null;
						previousValue.GiaTours.Remove(this);
					}
					this._Tour.Entity = value;
					if ((value != null))
					{
						value.GiaTours.Add(this);
						this._Tour_Id = value.Id;
					}
					else
					{
						this._Tour_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _HoTen;
		
		private string _CMND;
		
		private string _DiaChi;
		
		private string _GioiTinh;
		
		private string _SDT;
		
		private string _QuocTich;
		
		private EntitySet<ChiTietDoan> _ChiTietDoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnQuocTichChanging(string value);
    partial void OnQuocTichChanged();
    #endregion
		
		public KhachHang()
		{
			this._ChiTietDoans = new EntitySet<ChiTietDoan>(new Action<ChiTietDoan>(this.attach_ChiTietDoans), new Action<ChiTietDoan>(this.detach_ChiTietDoans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="NVarChar(10)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(10)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(10)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(10)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuocTich", DbType="NVarChar(10)")]
		public string QuocTich
		{
			get
			{
				return this._QuocTich;
			}
			set
			{
				if ((this._QuocTich != value))
				{
					this.OnQuocTichChanging(value);
					this.SendPropertyChanging();
					this._QuocTich = value;
					this.SendPropertyChanged("QuocTich");
					this.OnQuocTichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_ChiTietDoan", Storage="_ChiTietDoans", ThisKey="Id", OtherKey="KhachHang_Id")]
		public EntitySet<ChiTietDoan> ChiTietDoans
		{
			get
			{
				return this._ChiTietDoans;
			}
			set
			{
				this._ChiTietDoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDoans(ChiTietDoan entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_ChiTietDoans(ChiTietDoan entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiChiPhi")]
	public partial class LoaiChiPhi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TenLoai;
		
		private EntitySet<ChiPhi> _ChiPhis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public LoaiChiPhi()
		{
			this._ChiPhis = new EntitySet<ChiPhi>(new Action<ChiPhi>(this.attach_ChiPhis), new Action<ChiPhi>(this.detach_ChiPhis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiChiPhi_ChiPhi", Storage="_ChiPhis", ThisKey="Id", OtherKey="LoaiChiPhi_Id")]
		public EntitySet<ChiPhi> ChiPhis
		{
			get
			{
				return this._ChiPhis;
			}
			set
			{
				this._ChiPhis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiPhis(ChiPhi entity)
		{
			this.SendPropertyChanging();
			entity.LoaiChiPhi = this;
		}
		
		private void detach_ChiPhis(ChiPhi entity)
		{
			this.SendPropertyChanging();
			entity.LoaiChiPhi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiTour")]
	public partial class LoaiTour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TenLoai;
		
		private EntitySet<Tour> _Tours;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public LoaiTour()
		{
			this._Tours = new EntitySet<Tour>(new Action<Tour>(this.attach_Tours), new Action<Tour>(this.detach_Tours));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTour_Tour", Storage="_Tours", ThisKey="Id", OtherKey="LoaiTour_Id")]
		public EntitySet<Tour> Tours
		{
			get
			{
				return this._Tours;
			}
			set
			{
				this._Tours.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tours(Tour entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTour = this;
		}
		
		private void detach_Tours(Tour entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTour = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _HoTen;
		
		private EntitySet<PhanCong> _PhanCongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    #endregion
		
		public NhanVien()
		{
			this._PhanCongs = new EntitySet<PhanCong>(new Action<PhanCong>(this.attach_PhanCongs), new Action<PhanCong>(this.detach_PhanCongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhanCong", Storage="_PhanCongs", ThisKey="Id", OtherKey="NhanVien_Id")]
		public EntitySet<PhanCong> PhanCongs
		{
			get
			{
				return this._PhanCongs;
			}
			set
			{
				this._PhanCongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhanCongs(PhanCong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_PhanCongs(PhanCong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NoiDungTour")]
	public partial class NoiDungTour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DoanDuLich_Id;
		
		private string _HanhTrinh;
		
		private string _KhachSan;
		
		private string _DiaDiem;
		
		private EntityRef<DoanDuLich> _DoanDuLich;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDoanDuLich_IdChanging(int value);
    partial void OnDoanDuLich_IdChanged();
    partial void OnHanhTrinhChanging(string value);
    partial void OnHanhTrinhChanged();
    partial void OnKhachSanChanging(string value);
    partial void OnKhachSanChanged();
    partial void OnDiaDiemChanging(string value);
    partial void OnDiaDiemChanged();
    #endregion
		
		public NoiDungTour()
		{
			this._DoanDuLich = default(EntityRef<DoanDuLich>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoanDuLich_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DoanDuLich_Id
		{
			get
			{
				return this._DoanDuLich_Id;
			}
			set
			{
				if ((this._DoanDuLich_Id != value))
				{
					if (this._DoanDuLich.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDoanDuLich_IdChanging(value);
					this.SendPropertyChanging();
					this._DoanDuLich_Id = value;
					this.SendPropertyChanged("DoanDuLich_Id");
					this.OnDoanDuLich_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HanhTrinh", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string HanhTrinh
		{
			get
			{
				return this._HanhTrinh;
			}
			set
			{
				if ((this._HanhTrinh != value))
				{
					this.OnHanhTrinhChanging(value);
					this.SendPropertyChanging();
					this._HanhTrinh = value;
					this.SendPropertyChanged("HanhTrinh");
					this.OnHanhTrinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhachSan", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string KhachSan
		{
			get
			{
				return this._KhachSan;
			}
			set
			{
				if ((this._KhachSan != value))
				{
					this.OnKhachSanChanging(value);
					this.SendPropertyChanging();
					this._KhachSan = value;
					this.SendPropertyChanged("KhachSan");
					this.OnKhachSanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaDiem", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DiaDiem
		{
			get
			{
				return this._DiaDiem;
			}
			set
			{
				if ((this._DiaDiem != value))
				{
					this.OnDiaDiemChanging(value);
					this.SendPropertyChanging();
					this._DiaDiem = value;
					this.SendPropertyChanged("DiaDiem");
					this.OnDiaDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoanDuLich_NoiDungTour", Storage="_DoanDuLich", ThisKey="DoanDuLich_Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DoanDuLich DoanDuLich
		{
			get
			{
				return this._DoanDuLich.Entity;
			}
			set
			{
				DoanDuLich previousValue = this._DoanDuLich.Entity;
				if (((previousValue != value) 
							|| (this._DoanDuLich.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DoanDuLich.Entity = null;
						previousValue.NoiDungTour = null;
					}
					this._DoanDuLich.Entity = value;
					if ((value != null))
					{
						value.NoiDungTour = this;
						this._DoanDuLich_Id = value.Id;
					}
					else
					{
						this._DoanDuLich_Id = default(int);
					}
					this.SendPropertyChanged("DoanDuLich");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanCong")]
	public partial class PhanCong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NhanVien_Id;
		
		private int _DoanDuLich_Id;
		
		private string _NhiemVu;
		
		private EntityRef<DoanDuLich> _DoanDuLich;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNhanVien_IdChanging(int value);
    partial void OnNhanVien_IdChanged();
    partial void OnDoanDuLich_IdChanging(int value);
    partial void OnDoanDuLich_IdChanged();
    partial void OnNhiemVuChanging(string value);
    partial void OnNhiemVuChanged();
    #endregion
		
		public PhanCong()
		{
			this._DoanDuLich = default(EntityRef<DoanDuLich>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhanVien_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NhanVien_Id
		{
			get
			{
				return this._NhanVien_Id;
			}
			set
			{
				if ((this._NhanVien_Id != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNhanVien_IdChanging(value);
					this.SendPropertyChanging();
					this._NhanVien_Id = value;
					this.SendPropertyChanged("NhanVien_Id");
					this.OnNhanVien_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoanDuLich_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DoanDuLich_Id
		{
			get
			{
				return this._DoanDuLich_Id;
			}
			set
			{
				if ((this._DoanDuLich_Id != value))
				{
					if (this._DoanDuLich.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDoanDuLich_IdChanging(value);
					this.SendPropertyChanging();
					this._DoanDuLich_Id = value;
					this.SendPropertyChanged("DoanDuLich_Id");
					this.OnDoanDuLich_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhiemVu", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NhiemVu
		{
			get
			{
				return this._NhiemVu;
			}
			set
			{
				if ((this._NhiemVu != value))
				{
					this.OnNhiemVuChanging(value);
					this.SendPropertyChanging();
					this._NhiemVu = value;
					this.SendPropertyChanged("NhiemVu");
					this.OnNhiemVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoanDuLich_PhanCong", Storage="_DoanDuLich", ThisKey="DoanDuLich_Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DoanDuLich DoanDuLich
		{
			get
			{
				return this._DoanDuLich.Entity;
			}
			set
			{
				DoanDuLich previousValue = this._DoanDuLich.Entity;
				if (((previousValue != value) 
							|| (this._DoanDuLich.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DoanDuLich.Entity = null;
						previousValue.PhanCongs.Remove(this);
					}
					this._DoanDuLich.Entity = value;
					if ((value != null))
					{
						value.PhanCongs.Add(this);
						this._DoanDuLich_Id = value.Id;
					}
					else
					{
						this._DoanDuLich_Id = default(int);
					}
					this.SendPropertyChanged("DoanDuLich");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhanCong", Storage="_NhanVien", ThisKey="NhanVien_Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.PhanCongs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.PhanCongs.Add(this);
						this._NhanVien_Id = value.Id;
					}
					else
					{
						this._NhanVien_Id = default(int);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThamQuan")]
	public partial class ThamQuan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Tour_Id;
		
		private int _DiaDiem_Id;
		
		private int _ThuTu;
		
		private EntityRef<DiaDiem> _DiaDiem;
		
		private EntityRef<Tour> _Tour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTour_IdChanging(int value);
    partial void OnTour_IdChanged();
    partial void OnDiaDiem_IdChanging(int value);
    partial void OnDiaDiem_IdChanged();
    partial void OnThuTuChanging(int value);
    partial void OnThuTuChanged();
    #endregion
		
		public ThamQuan()
		{
			this._DiaDiem = default(EntityRef<DiaDiem>);
			this._Tour = default(EntityRef<Tour>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tour_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Tour_Id
		{
			get
			{
				return this._Tour_Id;
			}
			set
			{
				if ((this._Tour_Id != value))
				{
					if (this._Tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTour_IdChanging(value);
					this.SendPropertyChanging();
					this._Tour_Id = value;
					this.SendPropertyChanged("Tour_Id");
					this.OnTour_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaDiem_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DiaDiem_Id
		{
			get
			{
				return this._DiaDiem_Id;
			}
			set
			{
				if ((this._DiaDiem_Id != value))
				{
					if (this._DiaDiem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiaDiem_IdChanging(value);
					this.SendPropertyChanging();
					this._DiaDiem_Id = value;
					this.SendPropertyChanged("DiaDiem_Id");
					this.OnDiaDiem_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuTu", DbType="Int NOT NULL")]
		public int ThuTu
		{
			get
			{
				return this._ThuTu;
			}
			set
			{
				if ((this._ThuTu != value))
				{
					this.OnThuTuChanging(value);
					this.SendPropertyChanging();
					this._ThuTu = value;
					this.SendPropertyChanged("ThuTu");
					this.OnThuTuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DiaDiem_ThamQuan", Storage="_DiaDiem", ThisKey="DiaDiem_Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DiaDiem DiaDiem
		{
			get
			{
				return this._DiaDiem.Entity;
			}
			set
			{
				DiaDiem previousValue = this._DiaDiem.Entity;
				if (((previousValue != value) 
							|| (this._DiaDiem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DiaDiem.Entity = null;
						previousValue.ThamQuans.Remove(this);
					}
					this._DiaDiem.Entity = value;
					if ((value != null))
					{
						value.ThamQuans.Add(this);
						this._DiaDiem_Id = value.Id;
					}
					else
					{
						this._DiaDiem_Id = default(int);
					}
					this.SendPropertyChanged("DiaDiem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_ThamQuan", Storage="_Tour", ThisKey="Tour_Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Tour Tour
		{
			get
			{
				return this._Tour.Entity;
			}
			set
			{
				Tour previousValue = this._Tour.Entity;
				if (((previousValue != value) 
							|| (this._Tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tour.Entity = null;
						previousValue.ThamQuans.Remove(this);
					}
					this._Tour.Entity = value;
					if ((value != null))
					{
						value.ThamQuans.Add(this);
						this._Tour_Id = value.Id;
					}
					else
					{
						this._Tour_Id = default(int);
					}
					this.SendPropertyChanged("Tour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tour")]
	public partial class Tour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TenTour;
		
		private string _DacDiem;
		
		private int _LoaiTour_Id;
		
		private EntitySet<DoanDuLich> _DoanDuLiches;
		
		private EntitySet<GiaTour> _GiaTours;
		
		private EntitySet<ThamQuan> _ThamQuans;
		
		private EntityRef<LoaiTour> _LoaiTour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTenTourChanging(string value);
    partial void OnTenTourChanged();
    partial void OnDacDiemChanging(string value);
    partial void OnDacDiemChanged();
    partial void OnLoaiTour_IdChanging(int value);
    partial void OnLoaiTour_IdChanged();
    #endregion
		
		public Tour()
		{
			this._DoanDuLiches = new EntitySet<DoanDuLich>(new Action<DoanDuLich>(this.attach_DoanDuLiches), new Action<DoanDuLich>(this.detach_DoanDuLiches));
			this._GiaTours = new EntitySet<GiaTour>(new Action<GiaTour>(this.attach_GiaTours), new Action<GiaTour>(this.detach_GiaTours));
			this._ThamQuans = new EntitySet<ThamQuan>(new Action<ThamQuan>(this.attach_ThamQuans), new Action<ThamQuan>(this.detach_ThamQuans));
			this._LoaiTour = default(EntityRef<LoaiTour>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTour", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenTour
		{
			get
			{
				return this._TenTour;
			}
			set
			{
				if ((this._TenTour != value))
				{
					this.OnTenTourChanging(value);
					this.SendPropertyChanging();
					this._TenTour = value;
					this.SendPropertyChanged("TenTour");
					this.OnTenTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DacDiem", DbType="NVarChar(255)")]
		public string DacDiem
		{
			get
			{
				return this._DacDiem;
			}
			set
			{
				if ((this._DacDiem != value))
				{
					this.OnDacDiemChanging(value);
					this.SendPropertyChanging();
					this._DacDiem = value;
					this.SendPropertyChanged("DacDiem");
					this.OnDacDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiTour_Id", DbType="Int NOT NULL")]
		public int LoaiTour_Id
		{
			get
			{
				return this._LoaiTour_Id;
			}
			set
			{
				if ((this._LoaiTour_Id != value))
				{
					if (this._LoaiTour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiTour_IdChanging(value);
					this.SendPropertyChanging();
					this._LoaiTour_Id = value;
					this.SendPropertyChanged("LoaiTour_Id");
					this.OnLoaiTour_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_DoanDuLich", Storage="_DoanDuLiches", ThisKey="Id", OtherKey="Tour_Id")]
		public EntitySet<DoanDuLich> DoanDuLiches
		{
			get
			{
				return this._DoanDuLiches;
			}
			set
			{
				this._DoanDuLiches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_GiaTour", Storage="_GiaTours", ThisKey="Id", OtherKey="Tour_Id")]
		public EntitySet<GiaTour> GiaTours
		{
			get
			{
				return this._GiaTours;
			}
			set
			{
				this._GiaTours.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_ThamQuan", Storage="_ThamQuans", ThisKey="Id", OtherKey="Tour_Id")]
		public EntitySet<ThamQuan> ThamQuans
		{
			get
			{
				return this._ThamQuans;
			}
			set
			{
				this._ThamQuans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTour_Tour", Storage="_LoaiTour", ThisKey="LoaiTour_Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public LoaiTour LoaiTour
		{
			get
			{
				return this._LoaiTour.Entity;
			}
			set
			{
				LoaiTour previousValue = this._LoaiTour.Entity;
				if (((previousValue != value) 
							|| (this._LoaiTour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiTour.Entity = null;
						previousValue.Tours.Remove(this);
					}
					this._LoaiTour.Entity = value;
					if ((value != null))
					{
						value.Tours.Add(this);
						this._LoaiTour_Id = value.Id;
					}
					else
					{
						this._LoaiTour_Id = default(int);
					}
					this.SendPropertyChanged("LoaiTour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DoanDuLiches(DoanDuLich entity)
		{
			this.SendPropertyChanging();
			entity.Tour = this;
		}
		
		private void detach_DoanDuLiches(DoanDuLich entity)
		{
			this.SendPropertyChanging();
			entity.Tour = null;
		}
		
		private void attach_GiaTours(GiaTour entity)
		{
			this.SendPropertyChanging();
			entity.Tour = this;
		}
		
		private void detach_GiaTours(GiaTour entity)
		{
			this.SendPropertyChanging();
			entity.Tour = null;
		}
		
		private void attach_ThamQuans(ThamQuan entity)
		{
			this.SendPropertyChanging();
			entity.Tour = this;
		}
		
		private void detach_ThamQuans(ThamQuan entity)
		{
			this.SendPropertyChanging();
			entity.Tour = null;
		}
	}
}
#pragma warning restore 1591
